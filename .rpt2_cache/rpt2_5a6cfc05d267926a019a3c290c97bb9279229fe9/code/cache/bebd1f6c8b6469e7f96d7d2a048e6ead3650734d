{"map":"{\"version\":3,\"file\":\"xhr.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/xhr.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { parseHeaders } from './helpers/headers';\r\nimport { createError } from './helpers/error';\r\nimport { isURLSameOrigin } from './helpers/url';\r\nimport { isFormData } from './helpers/util';\r\nimport cookie from './helpers/cookie';\r\nexport default function xhr(config) {\r\n    return new Promise(function (resolve, reject) {\r\n        var _a = config.data, data = _a === void 0 ? null : _a, url = config.url, method = config.method, _b = config.headers, headers = _b === void 0 ? {} : _b, responseType = config.responseType, timeout = config.timeout, cancelToken = config.cancelToken, withCredentials = config.withCredentials, xsrfCookieName = config.xsrfCookieName, xsrfHeaderName = config.xsrfHeaderName, onDownloadProgress = config.onDownloadProgress, onUploadProgress = config.onUploadProgress, auth = config.auth, validateStatus = config.validateStatus;\r\n        var request = new XMLHttpRequest();\r\n        request.open(method.toLocaleUpperCase(), url, true);\r\n        ConfigureRequest();\r\n        addEvents();\r\n        processHeaders();\r\n        processCancel();\r\n        request.send(data);\r\n        function ConfigureRequest() {\r\n            if (responseType) {\r\n                request.responseType = responseType;\r\n            }\r\n            if (timeout) {\r\n                request.timeout = timeout;\r\n            }\r\n            if (withCredentials) {\r\n                request.withCredentials = withCredentials;\r\n            }\r\n        }\r\n        function addEvents() {\r\n            request.onreadystatechange = function handleLoad() {\r\n                if (request.readyState !== 4) {\r\n                    return;\r\n                }\r\n                if (request.status === 0) {\r\n                    return;\r\n                }\r\n                var responseHeader = parseHeaders(request.getAllResponseHeaders());\r\n                var responseData = responseType && responseType !== 'text'\r\n                    ? request.response\r\n                    : request.responseText;\r\n                var response = {\r\n                    data: responseData,\r\n                    status: request.status,\r\n                    statusText: request.statusText,\r\n                    headers: responseHeader,\r\n                    config: config,\r\n                    request: request\r\n                };\r\n                handleResponse(response);\r\n            };\r\n            request.onerror = function handleError() {\r\n                reject(createError('Network Error', config, null, request));\r\n            };\r\n            request.ontimeout = function handleTimeout() {\r\n                reject(createError(\"Timeout of \" + timeout + \" ms exceeded\", config, 'ECONNABORTED', request));\r\n            };\r\n            if (onDownloadProgress) {\r\n                request.onprogress = onDownloadProgress;\r\n            }\r\n            if (onUploadProgress) {\r\n                request.upload.onprogress = onUploadProgress;\r\n            }\r\n        }\r\n        function processHeaders() {\r\n            if (isFormData(data)) {\r\n                delete headers['Content-Type'];\r\n            }\r\n            if ((withCredentials || isURLSameOrigin(url)) && xsrfCookieName) {\r\n                var xsrfValue = cookie.read(xsrfCookieName);\r\n                if (xsrfValue && xsrfHeaderName) {\r\n                    headers[xsrfHeaderName] = xsrfValue;\r\n                }\r\n            }\r\n            if (auth) {\r\n                headers['Authorization'] =\r\n                    'Basic ' + btoa(auth.username + ':' + auth.password);\r\n            }\r\n            Object.keys(headers).forEach(function (name) {\r\n                if (data === null && name.toLowerCase() === 'content-type') {\r\n                    delete headers[name];\r\n                }\r\n                else {\r\n                    request.setRequestHeader(name, headers[name]);\r\n                }\r\n            });\r\n        }\r\n        function processCancel() {\r\n            if (cancelToken) {\r\n                cancelToken.promise\r\n                    .then(function (reason) {\r\n                    request.abort();\r\n                    reject(reason);\r\n                })\r\n                    .catch(\r\n                /* istanbul ignore next */\r\n                function () {\r\n                    // do nothing\r\n                });\r\n            }\r\n        }\r\n        function handleResponse(response) {\r\n            if (!validateStatus || validateStatus(response.status)) {\r\n                resolve(response);\r\n            }\r\n            else {\r\n                reject(createError(\"Request failed with status code \" + response.status, config, null, request, response));\r\n            }\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=xhr.js.map","dts":{"name":"/Users/zzt/Documents/ts-axios-doc/project/ts-axios/dist/types/xhr.d.ts","writeByteOrderMark":false,"text":"import { AxiosRequestConfig, AxiosPromise } from './types';\r\nexport default function xhr(config: AxiosRequestConfig): AxiosPromise;\r\n"}}
