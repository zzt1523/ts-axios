{"map":"{\"version\":3,\"file\":\"xhr.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/xhr.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { parseHeaders } from './helpers/headers';\r\nimport { createError } from './helpers/error';\r\nimport { isURLSameOrigin } from './helpers/url';\r\nimport { isFormData } from './helpers/util';\r\nimport cookie from './helpers/cookie';\r\nexport default function xhr(config) {\r\n    return new Promise(function (resolve, reject) {\r\n        var _a = config.data, data = _a === void 0 ? null : _a, url = config.url, method = config.method, _b = config.headers, headers = _b === void 0 ? {} : _b, responseType = config.responseType, timeout = config.timeout, cancelToken = config.cancelToken, withCredentials = config.withCredentials, xsrfCookieName = config.xsrfCookieName, xsrfHeaderName = config.xsrfHeaderName, onDownloadProgress = config.onDownloadProgress, onUploadProgress = config.onUploadProgress, auth = config.auth, validateStatus = config.validateStatus;\r\n        var request = new XMLHttpRequest();\r\n        request.open(method.toLocaleUpperCase(), url, true);\r\n        ConfigureRequest();\r\n        addEvents();\r\n        processHeaders();\r\n        processCancel();\r\n        request.send(data);\r\n        function ConfigureRequest() {\r\n            if (responseType) {\r\n                request.responseType = responseType;\r\n            }\r\n            if (timeout) {\r\n                request.timeout = timeout;\r\n            }\r\n            if (withCredentials) {\r\n                request.withCredentials = withCredentials;\r\n            }\r\n        }\r\n        function addEvents() {\r\n            request.onreadystatechange = function handleLoad() {\r\n                if (request.readyState !== 4) {\r\n                    return;\r\n                }\r\n                if (request.status === 0) {\r\n                    return;\r\n                }\r\n                var responseHeader = parseHeaders(request.getAllResponseHeaders());\r\n                var responseData = responseType && responseType !== 'text' ? request.response : request.responseText;\r\n                var response = {\r\n                    data: responseData,\r\n                    status: request.status,\r\n                    statusText: request.statusText,\r\n                    headers: responseHeader,\r\n                    config: config,\r\n                    request: request\r\n                };\r\n                handleResponse(response);\r\n            };\r\n            request.onerror = function handleError() {\r\n                reject(createError('Network Error', config, null, request));\r\n            };\r\n            request.ontimeout = function handleTimeout() {\r\n                reject(createError(\"Timeout of \" + timeout + \" ms exceeded\", config, 'ECONNABORTED', request));\r\n            };\r\n            if (onDownloadProgress) {\r\n                request.onprogress = onDownloadProgress;\r\n            }\r\n            if (onUploadProgress) {\r\n                request.upload.onprogress = onUploadProgress;\r\n            }\r\n        }\r\n        function processHeaders() {\r\n            if (isFormData(data)) {\r\n                delete headers['Content-Type'];\r\n            }\r\n            if ((withCredentials || isURLSameOrigin(url)) && xsrfCookieName) {\r\n                var xsrfValue = cookie.read(xsrfCookieName);\r\n                if (xsrfValue && xsrfHeaderName) {\r\n                    headers[xsrfHeaderName] = xsrfValue;\r\n                }\r\n            }\r\n            if (auth) {\r\n                headers['Authorization'] = 'Basic ' + btoa(auth.username + ':' + auth.password);\r\n            }\r\n            Object.keys(headers).forEach(function (name) {\r\n                if (data === null && name.toLowerCase() === 'content-type') {\r\n                    delete headers[name];\r\n                }\r\n                else {\r\n                    request.setRequestHeader(name, headers[name]);\r\n                }\r\n            });\r\n        }\r\n        function processCancel() {\r\n            if (cancelToken) {\r\n                cancelToken.promise\r\n                    .then(function (reason) {\r\n                    request.abort();\r\n                    reject(reason);\r\n                })\r\n                    .catch(\r\n                /* istanbul ignore next */\r\n                function () {\r\n                    // do nothing\r\n                });\r\n            }\r\n        }\r\n        function handleResponse(response) {\r\n            if (!validateStatus || validateStatus(response.status)) {\r\n                resolve(response);\r\n            }\r\n            else {\r\n                reject(createError(\"Request failed with status code \" + response.status, config, null, request, response));\r\n            }\r\n        }\r\n    });\r\n}\r\n//# sourceMappingURL=xhr.js.map","dts":{"name":"/Users/zzt/Documents/ts-axios-doc/project/ts-axios/dist/types/xhr.d.ts","writeByteOrderMark":false,"text":"import { AxiosRequestConfig, AxiosPromise } from './types';\r\nexport default function xhr(config: AxiosRequestConfig): AxiosPromise;\r\n"}}
